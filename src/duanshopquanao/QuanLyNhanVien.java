/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package duanshopquanao;

import duanshopquanao.model.QLNV;
import duanshopquanao.SQLConnect;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import duanshopquanao.dao.QLNVDAO;

/**
 *
 * @author MY PC
 */
public class QuanLyNhanVien extends javax.swing.JFrame {

    List<QLNV> nvList = new ArrayList<>();
    int currentIndex = -1;

    /**
     * Creates new form QuanLyNhanVien
     */
    public QuanLyNhanVien() {
        initComponents();
        setLocationRelativeTo(null);

        //setComBoBox();
//        dataTotable();
//        fillDataToTable();
        loadDataToTable();
//        disPlay(currentIndex);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtManhanvien = new javax.swing.JTextField();
        txtTenNhanVien = new javax.swing.JTextField();
        txtLuong = new javax.swing.JTextField();
        btnTimTheoMa = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();
        cboChucvu = new javax.swing.JComboBox<>();
        btnBackLogin = new javax.swing.JButton();
        btnTimTheoTen = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0,80));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Quản Lý Nhân Viên");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mã nhân viên:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tên nhân viên:");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Chức vụ:");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Lương:");

        txtTenNhanVien.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTenNhanVienCaretUpdate(evt);
            }
        });

        btnTimTheoMa.setForeground(new java.awt.Color(102, 102, 255));
        btnTimTheoMa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duanshopquanao/icons8-search-in-browser-20.png"))); // NOI18N
        btnTimTheoMa.setText("Tìm kiếm theo mã");
        btnTimTheoMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimTheoMaActionPerformed(evt);
            }
        });

        btnSave.setForeground(new java.awt.Color(102, 102, 255));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duanshopquanao/icons8-save-20.png"))); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setForeground(new java.awt.Color(102, 102, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duanshopquanao/icons8-delete-20.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setForeground(new java.awt.Color(102, 102, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duanshopquanao/icons8-update-20.png"))); // NOI18N
        btnUpdate.setText("Cập nhật");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblList.setBackground(java.awt.SystemColor.controlDkShadow);
        tblList.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tblList.setForeground(new java.awt.Color(255, 255, 255));
        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã NV", "Họ tên ", "Chức vụ", "Lương"
            }
        ));
        tblList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblList);
        tblList.getAccessibleContext().setAccessibleName("");

        cboChucvu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vui lòng chọn", "CHỦ SHOP", "NV KẾ TOÁN", "NV BÁN HÀNG", "NV BẢO VỆ" }));

        btnBackLogin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnBackLogin.setForeground(new java.awt.Color(102, 153, 255));
        btnBackLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duanshopquanao/icons8-back-20.png"))); // NOI18N
        btnBackLogin.setText("Về đăng nhập");
        btnBackLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackLoginActionPerformed(evt);
            }
        });

        btnTimTheoTen.setForeground(new java.awt.Color(102, 102, 255));
        btnTimTheoTen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duanshopquanao/icons8-search-in-browser-20.png"))); // NOI18N
        btnTimTheoTen.setText("Tìm kiếm theo tên");
        btnTimTheoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimTheoTenActionPerformed(evt);
            }
        });

        btnReset.setForeground(new java.awt.Color(102, 102, 255));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duanshopquanao/icons8-reset-20.png"))); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimTheoMa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboChucvu, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimTheoTen)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3)
                        .addGap(24, 24, 24)
                        .addComponent(txtManhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(247, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addComponent(btnBackLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnBackLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtManhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboChucvu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimTheoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimTheoMa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 870, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/duanshopquanao/nen nv.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 600));

        setSize(new java.awt.Dimension(1084, 607));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListMouseClicked
        // TODO add your handling code here:
        selectNV();
    }//GEN-LAST:event_tblListMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        addNV();

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        updateNV();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnTimTheoMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimTheoMaActionPerformed
        // TODO add your handling code here:
        searchtheoMa();

    }//GEN-LAST:event_btnTimTheoMaActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        deleteNV();

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackLoginActionPerformed
        // TODO add your handling code here:
        backToFormLogin();
    }//GEN-LAST:event_btnBackLoginActionPerformed

    private void btnTimTheoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimTheoTenActionPerformed
        // TODO add your handling code here:
        searchNVtheoTen();
    }//GEN-LAST:event_btnTimTheoTenActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
         reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtTenNhanVienCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTenNhanVienCaretUpdate
        // TODO add your handling code here:
        //searchNVtheoTen();
    }//GEN-LAST:event_txtTenNhanVienCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyNhanVien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackLogin;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTimTheoMa;
    private javax.swing.JButton btnTimTheoTen;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboChucvu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblList;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtManhanvien;
    private javax.swing.JTextField txtTenNhanVien;
    // End of variables declaration//GEN-END:variables
    public void disPlay(int i) {
        //khởi tạo hàm display để hiển thị nhân viên thứ i trong arrayList lên frame
        QLNV nv = nvList.get(i);
        txtManhanvien.setText(nv.getMaNV());
        txtTenNhanVien.setText(nv.getTenNV());
        cboChucvu.setSelectedItem(nv.getChucVu());
        txtLuong.setText(Double.toString(nv.getLuong()));
    }
//    

    public void loadDataToTable() {
        //Đọc tất cả dữ liệu trong table vào arraylist
        //Tạo title cho bảng
        nvList = QLNVDAO.getALL();
        String[] title = {"Mã nhân viên", "Tên nhân viên", "Chức vụ", "Lương"};
        DefaultTableModel model = new DefaultTableModel(title, 0);
        for (QLNV x : nvList) {
            model.addRow(new Object[]{x.getMaNV(), x.getTenNV(), x.getChucVu(), x.getLuong()});
        }
        tblList.setModel(model);
    }
//    public void dataTotable() {
//        nvList.add(new QLNV("NV01", "Trần Quốc Thịnh", "Quản lý", 2000000.0));
//        nvList.add(new QLNV("NV02", "Đỗ Tuấn Khải", "Bán hàng", 100000.0));
//        nvList.add(new QLNV("NV03", "Huỳnh Phi Hùng", "Kế toán", 1200000.0));
//
//    }

//    public void fillDataToTable() {
//        model = (DefaultTableModel) tblList.getModel();
//        model.setRowCount(0);
//        for (QLNV x : nvList) {
//            model.addRow(new Object[]{x.getMaNV(), x.getTenNV(), x.getChucVu(), String.format("%.2f", x.getLuong())});
//        }
//    }
//    public void setComBoBox() {
//        try {
//            String connectionUrl = "jdbc:sqlserver://localhost:1433;databaseName=QUANLYSHOPQUANAO;user=TRANQUOCTHINH;password=0845710208;encrypt=true;trustServerCertificate=true;";
//            Connection con = DriverManager.getConnection(connectionUrl);
//            Statement st = con.createStatement();
//            String sql = "select CHUCVU from NHANVIEN";
//            ResultSet rs = st.executeQuery(sql);
//            while (rs.next()) {
//                cboChucvu.addItem(rs.getString(1));
//            }
//        } catch (Exception e) {
//            System.out.println(e);
//        }
//    }
    public void selectNV() {
        currentIndex = tblList.getSelectedRow();
//        txtManhanvien.setText(tblList.getValueAt(currentIndex, 0).toString());
//        txtTenNhanVien.setText(tblList.getValueAt(currentIndex, 1).toString());
//        cboChucvu.setSelectedItem(tblList.getValueAt(currentIndex, 2).toString());
//        txtLuong.setText(tblList.getValueAt(currentIndex, 3).toString());
        disPlay(currentIndex);

    }

//    public void fillDataControl(QLNV qlnv) {
//        txtManhanvien.setText(qlnv.getMaNV());
//        txtTenNhanVien.setText(qlnv.getTenNV());
//        cboChucvu.setSelectedItem(qlnv.getChucVu());
//        txtLuong.setText(Double.toString(qlnv.getLuong()));
//    }
//    public QLNV readForm() {
//        return new QLNV(txtManhanvien.getText(), txtTenNhanVien.getText(), (String) cboChucvu.getSelectedItem(), Double.valueOf(txtLuong.getText()));
//    }
    public boolean chkTrungMa(String s) {
        for (QLNV nv : nvList) {
            if (nv.getMaNV().equalsIgnoreCase(s)) {
                return true;
            }

        }
        return false;
    }

    public boolean validateForm() {
        if (txtManhanvien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Mã nhân viên không được để trống", "Error", JOptionPane.ERROR_MESSAGE);
            txtManhanvien.requestFocus();
            return false;
        }
        String pattennv = "^NV[0-9]{3}$";
        if (!(txtManhanvien.getText()).matches(pattennv)) {
            JOptionPane.showMessageDialog(rootPane, "Mã nhân viên không hợp lệ", "Error", JOptionPane.ERROR_MESSAGE);
            txtManhanvien.requestFocus();
            return false;
        }
        if (txtTenNhanVien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Tên nhân viên không được để trống", "Error", JOptionPane.ERROR_MESSAGE);
            txtTenNhanVien.requestFocus();
            return false;
        }

        if (cboChucvu.getSelectedItem().equals("Vui lòng chọn")) {
            JOptionPane.showMessageDialog(rootPane, "Chức vụ không được để trống", "Error", JOptionPane.ERROR_MESSAGE);
            cboChucvu.requestFocus();
            return false;
        }

        if (txtLuong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Lương không được để trống", "Error", JOptionPane.ERROR_MESSAGE);
            txtLuong.requestFocus();
            return false;
        }

        try {
            Float.valueOf(txtLuong.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Lương phải là số", "Error", JOptionPane.ERROR_MESSAGE);
            txtLuong.requestFocus();
            return false;
        }

        if (Float.parseFloat(txtLuong.getText()) < 0 | Float.valueOf(txtLuong.getText()) < 5000000) {
            JOptionPane.showMessageDialog(rootPane, "Lương không được âm và phải từ 5 triệu trở lên", "Error", JOptionPane.ERROR_MESSAGE);
            txtLuong.requestFocus();
            return false;
        }
        return true;
    }

    public void backToFormLogin() {
        FromDangNhap fdn = new FromDangNhap();
        fdn.show();
        this.dispose();
        return;
    }

    public void reset() {
        txtManhanvien.setText("");
        txtTenNhanVien.setText("");
        cboChucvu.setSelectedItem("Vui lòng chọn");
        txtLuong.setText("");
    }

    public void addNV() {
        if (validateForm()) {
            if (chkTrungMa(txtManhanvien.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Mã nhân viên đã tồn tại", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            QLNV emp = new QLNV();
            emp.setMaNV(txtManhanvien.getText());
            emp.setTenNV(txtTenNhanVien.getText());
            emp.setChucVu((String) cboChucvu.getSelectedItem());
            emp.setLuong(Float.valueOf(txtLuong.getText()));
            int rs = QLNVDAO.insert(emp);
            if (rs > 0) {
                loadDataToTable();
                JOptionPane.showMessageDialog(rootPane, "Thêm nhân viên thành công");
                reset();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Thêm nhân viên thất bại");
            }

        }
    }

    public void updateNV() {
        if (validateForm()) {
            QLNV emp = new QLNV();
            emp.setMaNV(txtManhanvien.getText());
            emp.setTenNV(txtTenNhanVien.getText());
            emp.setChucVu((String) cboChucvu.getSelectedItem());
            emp.setLuong(Float.valueOf(txtLuong.getText()));
            int rs = QLNVDAO.update(emp);
            if (rs > 0) {
                loadDataToTable();
                JOptionPane.showMessageDialog(rootPane, "Cập nhật nhân viên thành công");
                reset();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Cập nhật nhân viên thất bại");
            }

        }

    }
//    public void capnhat(QLNV newnv) {
//
//        QLNV nv1 = findNv(newnv.getMaNV());
//        if (nv1 != null) {
//            nv1.setMaNV(newnv.getMaNV());
//            nv1.setTenNV(newnv.getTenNV());
//            nv1.setChucVu(newnv.getChucVu());
//            nv1.setLuong(newnv.getLuong());
//
//        }
//    }

//    public QLNV findNv(String Ma) {
//        for (QLNV sp : nvList) {
//            if (sp.getMaNV().equalsIgnoreCase(Ma)) {
//                return sp;
//            }
//        }
//        return null;
//    }
    public void searchtheoMa() {
        if(txtManhanvien.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Cần nhập mã nhân viên để tìm","Error",JOptionPane.ERROR_MESSAGE);
            txtManhanvien.requestFocus();
            return;
        }

        try {
            Connection con = SQLConnect.connectionSQL();
            String sql = "select * from NHANVIEN where MANV = ?";
            PreparedStatement st = con.prepareStatement(sql);
            st.setString(1, txtManhanvien.getText());
            ResultSet rs = st.executeQuery();
            if (rs.isBeforeFirst() == false) {
                JOptionPane.showMessageDialog(rootPane, "Thông tin nhân viên không tồn tại", "Error", JOptionPane.ERROR_MESSAGE);
                txtTenNhanVien.setText("");
                txtLuong.setText("");
                cboChucvu.setSelectedItem("Vui lòng chọn");
                return;
            }
            while (rs.next()) {
                if (txtManhanvien.getText().equals(rs.getString(1))) {
                    txtTenNhanVien.setText(rs.getString(2));
                    cboChucvu.setSelectedItem(rs.getString(3));
                    txtLuong.setText(rs.getString(4));
                    JOptionPane.showMessageDialog(rootPane, "Tìm thành công");
                }

            }

            con.close();
        } catch (Exception ex) {
            System.out.println(ex);
        }

    }

    public void searchNVtheoTen() {
        if(txtTenNhanVien.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Cần nhập tên nhân viên để tìm","Error",JOptionPane.ERROR_MESSAGE);
            txtTenNhanVien.requestFocus();
            return;
        }
        try {
            Connection con = SQLConnect.connectionSQL();
            String sql = "select * from NHANVIEN where HOTENNV like N'%" + txtTenNhanVien.getText() + "%'";
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.isBeforeFirst() == false) {
                JOptionPane.showMessageDialog(rootPane, "Thông tin nhân viên không tồn tại", "Error", JOptionPane.ERROR_MESSAGE);
                txtManhanvien.setText("");
                txtTenNhanVien.setText("");
                txtLuong.setText("");
                cboChucvu.setSelectedItem("Vui lòng chọn");
                return;
            }
            while (rs.next()) {
                if (txtTenNhanVien.getText().equalsIgnoreCase(rs.getString(2))) {
                    txtManhanvien.setText(rs.getString(1));
                    cboChucvu.setSelectedItem(rs.getString(3));
                    txtLuong.setText(rs.getString(4));
                    JOptionPane.showMessageDialog(rootPane, "Tìm thành công");
                }

            }

            con.close();
        } catch (Exception ex) {
            System.out.println(ex);
        }

    }

//    public void searchNV() {
//        if (txtManhanvien.getText().isEmpty() && txtTenNhanVien.getText().isEmpty()) {
//            JOptionPane.showMessageDialog(rootPane, "Nhập mã nhân viên hoặc tên nhân viên để xóa", "Error", JOptionPane.ERROR_MESSAGE);
//            txtManhanvien.requestFocus();
//            txtTenNhanVien.requestFocus();
//            return;
//        }
//        if (txtManhanvien.getText() != null) {
//            try {
//                Connection con = SQLConnect.connectionSQL();
//                String sql = "select * from NHANVIEN where MANV = ?";
//                PreparedStatement st = con.prepareStatement(sql);
//                st.setString(1, txtManhanvien.getText());
//                ResultSet rs = st.executeQuery();
//                if (rs.isBeforeFirst() == false) {
//                    JOptionPane.showMessageDialog(rootPane, "Thông tin nhân viên không tồn tại", "Error", JOptionPane.ERROR_MESSAGE);
//                    txtTenNhanVien.setText("");
//                    txtLuong.setText("");
//                    cboChucvu.setSelectedItem("Please choose");
//                    return;
//                }
//                while (rs.next()) {
//                    if (txtManhanvien.getText().equals(rs.getString(1))) {
//                        txtTenNhanVien.setText(rs.getString(2));
//                        cboChucvu.setSelectedItem(rs.getString(3));
//                        txtLuong.setText(rs.getString(4));
//                        JOptionPane.showMessageDialog(rootPane, "Tìm thành công");
//                    }
//
//                }
//
//                con.close();
//            } catch (Exception ex) {
//                System.out.println(ex);
//            }
//            return;
//        }
//        if (txtTenNhanVien.getText() != null) {
//            try {
//                Connection con = SQLConnect.connectionSQL();
//                String sql = "select * from NHANVIEN where HOTENNV like N'%" + txtTenNhanVien.getText() + "%'";
//                Statement st = con.createStatement();
//                ResultSet rs = st.executeQuery(sql);
//                if (rs.isBeforeFirst() == false) {
//                    JOptionPane.showMessageDialog(rootPane, "Thông tin nhân viên không tồn tại", "Error", JOptionPane.ERROR_MESSAGE);
//                    txtManhanvien.setText("");
//                    txtTenNhanVien.setText("");
//                    txtLuong.setText("");
//                    cboChucvu.setSelectedItem("Please choose");
//                    return;
//                }
//                while (rs.next()) {
//                    if (txtTenNhanVien.getText().equals(rs.getString(2))) {
//                        txtManhanvien.setText(rs.getString(1));
//                        cboChucvu.setSelectedItem(rs.getString(3));
//                        txtLuong.setText(rs.getString(4));
//                        JOptionPane.showMessageDialog(rootPane, "Tìm thành công");
//                    }
//
//                }
//
//                con.close();
//            } catch (Exception ex) {
//                System.out.println(ex);
//            }
//            return;
//        }
//    }

    public void deleteNV() {
        if (txtManhanvien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Mã nhân viên không được bỏ trống, cần nhập mã để xóa", "Error", JOptionPane.ERROR_MESSAGE);
            txtManhanvien.requestFocus();
            return;
        }
        int luachon = JOptionPane.showConfirmDialog(rootPane, "Bạn muốn xóa chứ?", "Delete", JOptionPane.YES_NO_OPTION);
        if (luachon == JOptionPane.YES_OPTION) {
            QLNV emp = new QLNV();
            emp.setMaNV(txtManhanvien.getText());
            int rs = QLNVDAO.delete(emp);
            if (rs > 0) {
                loadDataToTable();
                JOptionPane.showMessageDialog(rootPane, "Xóa nhân viên thành công");
                reset();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Thông tin nhân viên không tồn tại", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            return;
        }
    }
}
